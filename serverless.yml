# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: orgchart-backend-serverless
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

plugins:
  - serverless-offline
  - serverless-offline-lambda-invoke
  - serverless-plugin-tracing
  - serverless-bundle

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  environment:
    stage: dev

functions:
  getRole:
    handler: services/auth/getRoleForUser.getRoleForUser
    timeout: 900
    events: 
      - http:
          method: GET
          path: api/auth/role/{email}
          response:
            headers:
              Access-Control-Allow-Origin: "'*'"
          cors: true
          integration: lambda
  createOrUpdateRole:
    handler: services/misc/createOrUpdateRole.createOrUpdateRole
    timeout: 900
    events: 
      - http:
          method: PUT
          path: api/misc/createOrUpdateRole
          response:
            headers:
              Access-Control-Allow-Origin: "'*'"
          cors: true
          integration: lambda
  verifyMSALToken:
    handler: services/auth/verifyLogin.verifyLogin
    timeout: 900
    events: 
      - http:
          method: POST
          path: api/auth/verifyLogin
          response:
            headers:
              Access-Control-Allow-Origin: "'*'"
          cors: true
          integration: lambda
  getEmployeesForHierarchy:
    handler: services/employee/getEmployeesForSource.getEmployeesForSource
    timeout: 900
    events: 
      - http:
          method: GET
          path: api/employee/{source}
          response:
            headers:
              Access-Control-Allow-Origin: "'*'"
          cors: true
          integration: lambda
  getEmployeesForDirectory:
    handler: services/employee/getEmployeeForDirectory.getEmployeeForDirectory
    timeout: 900
    events: 
      - http:
          method: GET
          path: api/employee/directory
          request:
            parameters:
              querystrings:
                pageNo: true
                perPage: true
                pattern: true
                source: true
                sort: false
          response:
            headers:
              Access-Control-Allow-Origin: "'*'"
          cors: true
          integration: lambda
  getEmployeesForDirectoryById:
    handler: services/employee/getEmployeeForDirectoryById.getEmployeeForDirectoryById
    timeout: 900
    events: 
      - http:
          method: GET
          path: api/employee/directory/{id}
          response:
            headers:
              Access-Control-Allow-Origin: "'*'"
          cors: true
          integration: lambda
  getS3SignedUrlForDocuments:
    handler: services/employee/s3SignedUrlForDocuments.s3SignedUrlForDocuments
    timeout: 900
    events: 
      - http:
          method: GET
          path: api/employee/document/{id}
          request:
            parameters:
              querystrings:
                type: true
                key: true
                officialID: true
                name: true
                pimcoId: false
          response:
            headers:
              Access-Control-Allow-Origin: "'*'"
          cors: true
          integration: lambda
  uploadDocumentUrlTODb:
    handler: services/employee/documentS3Url.documentS3Url
    timeout: 900
    events: 
      - http:
          method: POST
          path: api/employee/documentS3Url/{id}
          response:
            headers:
              Access-Control-Allow-Origin: "'*'"
          cors: true
          integration: lambda
  deleteDocumentS3:
    handler: services/employee/deleteDocumentFromS3.deleteDocumentFromS3
    timeout: 900
    events: 
      - http:
          method: POST
          path: api/employee/document/delete/{id}
          response:
            headers:
              Access-Control-Allow-Origin: "'*'"
          cors: true
          integration: lambda